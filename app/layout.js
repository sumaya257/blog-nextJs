import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";
import { AuthProvider } from "./authprovider/AuthProvider";
import { RegisterLink, LoginLink, LogoutLink } from "@kinde-oss/kinde-auth-nextjs/components";

import { getKindeServerSession } from "@kinde-oss/kinde-auth-nextjs/server";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }) {
  // Server-side authentication check inside a server component
  const {isAuthenticated} = getKindeServerSession();
   const isUserAuthenticated = await isAuthenticated();

  return (
    <AuthProvider>
      <html lang="en" className="p-6">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <nav className="bg-blue-600 text-white shadow-lg sticky top-0 z-50 mb-20">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <div className="flex justify-between items-center py-4">
                {/* Brand/Logo */}
                <div className="text-xl font-semibold">
                  <Link
                    href="/"
                    className="hover:text-gray-200 transition duration-300"
                  >
                    Brand
                  </Link>
                </div>

                {/* Navigation Links */}
                <ul className="flex gap-6">
                  <li>
                    <Link
                      href="/"
                      className="hover:text-gray-200 transition duration-300"
                    >
                      Home
                    </Link>
                  </li>
                  <li>
                    <Link
                      href="/profile"
                      className="hover:text-gray-200 transition duration-300"
                    >
                      Profile
                    </Link>
                  </li>

                  {/* Authentication Links */}
                  {!isUserAuthenticated ? (
                    <>
                      <li>
                        <LoginLink className="hover:text-gray-200 transition duration-300">
                          Sign in
                        </LoginLink>
                      </li>
                      <li>
                        <RegisterLink className="hover:text-gray-200 transition duration-300">
                          Sign up
                        </RegisterLink>
                      </li>
                    </>
                  ) : (
                    <li>
                      <LogoutLink className="hover:text-gray-200 transition duration-300">
                        Log out
                      </LogoutLink>
                    </li>
                  )}
                </ul>
              </div>
            </div>
          </nav>

          {/* Main Content */}
          <main>{children}</main>
        </body>
      </html>
    </AuthProvider>
  );
}
